<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>PLT RECORDS - Attendance SMS System</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        :root {
            --primary: #3f0101;
            --secondary: #622626;
            --success: #4cc9f0;
            --light: #f8f9fa;
            --dark: #212529;
            --danger: #e63946;
            --warning: #fca311;
            --gray: #6c757d;
            --light-gray: #e9ecef;
            --sidebar-width: 300px;
            --sidebar-height: 500px;
        }

        body {
            background-color: #f5f7fb;
            color: var(--dark);
            line-height: 1.6;
        }

        .container {
            max-width: 1400px;
            margin: 0 auto;
            padding: 20px;
        }

        header {
            background: linear-gradient(135deg, var(--primary), var(--secondary));
            color: white;
            padding: 15px 0;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            position: sticky;
            top: 0;
            z-index: 100;
        }

        .header-content {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .logo {
            display: flex;
            align-items: center;
            gap: 10px;
            font-size: 1.5rem;
            font-weight: 700;
        }

        .logo i {
            font-size: 1.8rem;
        }

        .user-profile {
            display: flex;
            align-items: center;
            gap: 10px;
            background: rgba(255, 255, 255, 0.2);
            padding: 8px 15px;
            border-radius: 20px;
        }

        .user-profile img {
            width: 35px;
            height: 35px;
            border-radius: 50%;
            object-fit: cover;
        }

        .dashboard {
            display: grid;
            grid-template-columns: var(--sidebar-width) 1fr;
            gap: 20px;
            margin-top: 20px;
        }

        .sidebar {
            background: white;
            border-radius: 10px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
            padding: 20px;
            height: fit-content;
            position: sticky;
            top: 90px;
        }

        .sidebar-menu {
            list-style: none;
        }

        .sidebar-menu li {
            margin-bottom: 10px;
        }

        .sidebar-menu a {
            display: flex;
            align-items: center;
            gap: 10px;
            padding: 12px 15px;
            color: var(--dark);
            text-decoration: none;
            border-radius: 8px;
            transition: all 0.3s ease;
        }

        .sidebar-menu a:hover, .sidebar-menu a.active {
            background: var(--light-gray);
            color: var(--primary);
        }

        .sidebar-menu i {
            width: 20px;
            text-align: center;
        }

        .main-content {
            background: white;
            border-radius: 10px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
            padding: 25px;
        }

        .page-title {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 25px;
            padding-bottom: 15px;
            border-bottom: 1px solid var(--light-gray);
        }

        .page-title h1 {
            font-size: 1.8rem;
            color: var(--dark);
        }

        .date-selector {
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .date-selector input {
            padding: 8px 12px;
            border: 1px solid var(--light-gray);
            border-radius: 6px;
        }

        .search-box {
            display: flex;
            gap: 10px;
            margin-bottom: 25px;
        }

        .search-box input {
            flex: 1;
            padding: 12px 15px;
            border: 1px solid var(--light-gray);
            border-radius: 8px;
            font-size: 1rem;
        }

        .search-box button {
            background: var(--primary);
            color: white;
            border: none;
            border-radius: 8px;
            padding: 0 20px;
            cursor: pointer;
            transition: background 0.3s ease;
        }

        .search-box button:hover {
            background: var(--secondary);
        }

        .stats-cards {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }

        .stat-card {
            background: white;
            border-radius: 10px;
            padding: 20px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
            border-left: 4px solid var(--primary);
        }

        .stat-card h3 {
            font-size: 0.9rem;
            color: var(--gray);
            margin-bottom: 10px;
        }

        .stat-card .value {
            font-size: 1.8rem;
            font-weight: 700;
            color: var(--dark);
        }

        .stat-card .trend {
            display: flex;
            align-items: center;
            gap: 5px;
            font-size: 0.8rem;
            margin-top: 5px;
        }

        .trend.up {
            color: #28a745;
        }

        .trend.down {
            color: var(--danger);
        }

        .attendance-table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
        }

        .attendance-table th,
        .attendance-table td {
            padding: 15px;
            text-align: left;
            border-bottom: 1px solid var(--light-gray);
        }

        .attendance-table th {
            background: var(--light);
            color: var(--gray);
            font-weight: 600;
        }

        .attendance-table tr:hover {
            background: var(--light);
        }

        .status {
            display: inline-block;
            padding: 5px 10px;
            border-radius: 20px;
            font-size: 0.8rem;
            font-weight: 600;
        }

        .status.in {
            background: #e8f5e9;
            color: #2e7d32;
        }

        .status.out {
            background: #e3f2fd;
            color: #1565c0;
        }

        .status.absent {
            background: #ffebee;
            color: #c62828;
        }

        .status.late {
            background: #fff8e1;
            color: #ff8f00;
        }

        .status.success {
            background: #e8f5e9;
            color: #2e7d32;
        }

        .status.failed {
            background: #ffebee;
            color: #c62828;
        }

        .status.delayed {
            background: #fff8e1;
            color: #ff8f00;
        }

        .pagination {
            display: flex;
            justify-content: center;
            margin-top: 20px;
            gap: 10px;
        }

        .pagination button {
            padding: 8px 15px;
            border: 1px solid var(--light-gray);
            background: white;
            border-radius: 5px;
            cursor: pointer;
        }

        .pagination button.active {
            background: var(--primary);
            color: white;
            border-color: var(--primary);
        }

        .hidden {
            display: none;
        }

        .attendance-controls {
            display: flex;
            gap: 15px;
            margin-bottom: 20px;
        }

        .filter-group {
            display: flex;
            gap: 10px;
            align-items: center;
        }

        .filter-group select, .filter-group input {
            padding: 8px 12px;
            border: 1px solid var(--light-gray);
            border-radius: 6px;
        }

        .action-buttons {
            display: flex;
            gap: 10px;
        }

        .btn {
            padding: 10px 15px;
            border: none;
            border-radius: 6px;
            cursor: pointer;
            font-weight: 600;
            transition: all 0.3s ease;
        }

        .btn-primary {
            background: var(--primary);
            color: white;
        }

        .btn-primary:hover {
            background: var(--secondary);
        }

        .btn-secondary {
            background: var(--light-gray);
            color: var(--dark);
        }

        .btn-secondary:hover {
            background: #d1d5db;
        }

        .btn-danger {
            background: var(--danger);
            color: white;
        }

        .btn-danger:hover {
            background: #c1121f;
        }

        .btn-sm {
            padding: 5px 10px;
            font-size: 0.8rem;
        }

        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.5);
            z-index: 1000;
            justify-content: center;
            align-items: center;
        }

        .modal-content {
            background: white;
            border-radius: 10px;
            padding: 25px;
            width: 90%;
            max-width: 500px;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
        }

        .modal-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
            padding-bottom: 15px;
            border-bottom: 1px solid var(--light-gray);
        }

        .modal-header h2 {
            font-size: 1.5rem;
            color: var(--dark);
        }

        .close-btn {
            background: none;
            border: none;
            font-size: 1.5rem;
            cursor: pointer;
            color: var(--gray);
        }

        .form-group {
            margin-bottom: 15px;
        }

        .form-group label {
            display: block;
            margin-bottom: 5px;
            font-weight: 600;
            color: var(--dark);
        }

        .form-group input, .form-group select {
            width: 100%;
            padding: 10px;
            border: 1px solid var(--light-gray);
            border-radius: 6px;
        }

        .form-actions {
            display: flex;
            justify-content: flex-end;
            gap: 10px;
            margin-top: 20px;
        }

        .settings-form {
            background: var(--light);
            padding: 20px;
            border-radius: 10px;
            margin-top: 15px;
        }

        .settings-section {
            margin-bottom: 30px;
            padding-bottom: 20px;
            border-bottom: 1px solid var(--light-gray);
        }

        .settings-section h3 {
            margin-bottom: 15px;
            color: var(--primary);
        }

        @media (max-width: 768px) {
            .dashboard {
                grid-template-columns: 1fr;
            }
            
            .sidebar {
                display: none;
            }
            
            .header-content {
                flex-direction: column;
                gap: 15px;
            }
            
            .stats-cards {
                grid-template-columns: 1fr;
            }
            
            .attendance-controls {
                flex-direction: column;
            }
            
            .filter-group {
                flex-wrap: wrap;
            }
        }
    </style>
</head>
<body>
    <header>
        <div class="container">
            <div class="header-content">
                <div class="logo">
                    <i class="fas fa-graduation-cap"></i>
                    <span>PLT SMS RECORDS</span>
                </div>
                <div class="user-profile">
                    <img src="https://ui-avatars.com/api/?name=Paolhyne+Basal&background=3f0101&color=fff" alt="User">
                    <span>Paolhyne Basal</span>
                </div>
            </div>
        </div>
    </header>

    <div class="container">
        <div class="dashboard">
            <div class="sidebar">
                <ul class="sidebar-menu">
                    <li><a href="#" class="active" data-page="dashboard"><i class="fas fa-home"></i> Dashboard</a></li>
                    <li><a href="#" data-page="attendance"><i class="fas fa-user-clock"></i> Attendance</a></li>
                    <li><a href="#" data-page="students"><i class="fas fa-users"></i> Students</a></li>
                    <li><a href="#" data-page="reports"><i class="fas fa-chart-bar"></i> Reports</a></li>
                    <li><a href="#" data-page="settings"><i class="fas fa-cog"></i> Settings</a></li>
                </ul>
            </div>

            <!-- Dashboard Page -->
            <div id="dashboardPage" class="main-content">
                <div class="page-title">
                    <h1>CCS Attendance Dashboard</h1>
                    <div class="date-selector">
                        <input type="date" id="datePicker" value="2023-10-16">
                    </div>
                </div>

                <div class="search-box">
                    <input type="text" id="searchInput" placeholder="Enter student number or name...">
                    <button id="searchBtn"><i class="fas fa-search"></i> Search</button>
                </div>

                <div class="stats-cards">
                    <div class="stat-card">
                        <h3>Total Students</h3>
                        <div class="value">1,248</div>
                        <div class="trend up"><i class="fas fa-arrow-up"></i> 3% from last year</div>
                    </div>
                    <div class="stat-card">
                        <h3>Present Today</h3>
                        <div class="value">1,192</div>
                        <div class="trend up"><i class="fas fa-arrow-up"></i> 2% from yesterday</div>
                    </div>
                    
                    <div class="stat-card">
                        <h3>Average Attendance</h3>
                        <div class="value">95.5%</div>
                        <div class="trend up"><i class="fas fa-arrow-up"></i> 0.5% from last month</div>
                    </div>
                </div>

                <h2>Recent Student Records</h2>
                <table class="attendance-table">
                    <thead>
                        <tr>
                            <th>Student ID</th>
                            <th>Name</th>
                            <th>Program</th>
                            <th>Date</th>
                            <th>Time In</th>
                            <th>Time Out</th>
                            <th>SMS Status</th>
                        </tr>
                    </thead>
                    <tbody id="attendanceTableBody">
                        <!-- Data will be populated by JavaScript -->
                    </tbody>
                </table>
                
                <div class="pagination">
                    <button class="active">1</button>
                    <button>2</button>
                    <button>3</button>
                    <button>4</button>
                    <button>5</button>
                </div>
            </div>

            <!-- Attendance Page -->
            <div id="attendancePage" class="main-content hidden">
                <div class="page-title">
                    <h1>Attendance Management</h1>
                    <button class="btn btn-primary" id="addAttendanceBtn"><i class="fas fa-plus"></i> Add Record</button>
                </div>

                <div class="attendance-controls">
                    <div class="filter-group">
                        <label>Date:</label>
                        <input type="date" id="attendanceDateFilter" value="2023-10-16">
                    </div>
                    <div class="filter-group">
                        <label>Program:</label>
                        <select id="programFilter">
                            <option value="">All Program</option>
                            <option value="Information Technology">Information Technology</option>
                            <option value="Entertainment and Multimedia">Entertainment and Multimedia</option>
                            <option value="Computer Science">Computer Science</option>
                        </select>
                    </div>
                    <div class="filter-group">
                        <label>SMS Status:</label>
                        <select id="statusFilter">
                            <option value="">All SMS Status</option>
                            <option value="success">Success</option>
                            <option value="failed">Failed</option>
                            <option value="delayed">Delayed</option>
                        </select>
                    </div>
                    <div class="action-buttons">
                        <button class="btn btn-secondary"><i class="fas fa-print"></i> Print</button>
                        <button class="btn btn-secondary"><i class="fas fa-download"></i> Export</button>
                    </div>
                </div>

                <table class="attendance-table">
                    <thead>
                        <tr>
                            <th>Student ID</th>
                            <th>Name</th>
                            <th>Program</th>
                            <th>Date</th>
                            <th>Time In</th>
                            <th>Time Out</th>
                            <th>SMS Status</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody id="attendanceManagementTable">
                        <!-- Data will be populated by JavaScript -->
                    </tbody>
                </table>
                
                <div class="pagination">
                    <button class="active">1</button>
                    <button>2</button>
                    <button>3</button>
                    <button>4</button>
                    <button>5</button>
                </div>
            </div>

            <!-- Students Page -->
            <div id="studentsPage" class="main-content hidden">
                <div class="page-title">
                    <h1>Student Management</h1>
                    <button class="btn btn-primary" id="addStudentBtn"><i class="fas fa-plus"></i> Add Student</button>
                </div>

                <div class="search-box">
                    <input type="text" id="studentSearchInput" placeholder="Search students by name or ID...">
                    <button id="studentSearchBtn"><i class="fas fa-search"></i> Search</button>
                </div>

                <table class="attendance-table">
                    <thead>
                        <tr>
                            <th>Student ID</th>
                            <th>Name</th>
                            <th>Program</th>
                            <th>Section</th>
                            <th>Contact</th>
                            <th>Attendance Rate</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody id="studentsTable">
                        <!-- Data will be populated by JavaScript -->
                    </tbody>
                </table>
                
                <div class="pagination">
                    <button class="active">1</button>
                    <button>2</button>
                    <button>3</button>
                    <button>4</button>
                    <button>5</button>
                </div>
            </div>

            <!-- Reports Page -->
            <div id="reportsPage" class="main-content hidden">
                <div class="page-title">
                    <h1>Attendance Reports</h1>
                    <div class="date-selector">
                        <input type="month" id="reportMonth" value="2023-10">
                    </div>
                </div>

                <div class="stats-cards">
                    <div class="stat-card">
                        <h3>Overall Attendance</h3>
                        <div class="value">94.2%</div>
                        <div class="trend up"><i class="fas fa-arrow-up"></i> 1.2% from last month</div>
                    </div>
                    <div class="stat-card">
                        <h3>Absent Students</h3>
                        <div class="value">72</div>
                        <div class="trend down"><i class="fas fa-arrow-down"></i> 5 from last month</div>
                    </div>
                    <div class="stat-card">
                        <h3>Late Arrivals</h3>
                        <div class="value">156</div>
                        <div class="trend up"><i class="fas fa-arrow-up"></i> 12 from last month</div>
                    </div>
                    <div class="stat-card">
                        <h3>Perfect Attendance</h3>
                        <div class="value">892</div>
                        <div class="trend up"><i class="fas fa-arrow-up"></i> 23 from last month</div>
                    </div>
                </div>

                <h2>Attendance by Program</h2>
                <table class="attendance-table">
                    <thead>
                        <tr>
                            <th>Program</th>
                            <th>Total Students</th>
                            <th>Present</th>
                            <th>Absent</th>
                            <th>Late</th>
                            <th>Attendance Rate</th>
                        </tr>
                    </thead>
                    <tbody id="reportsTable">
                        <!-- Data will be populated by JavaScript -->
                    </tbody>
                </table>

                <h2 style="margin-top: 30px;">SMS Delivery Status</h2>
                <table class="attendance-table">
                    <thead>
                        <tr>
                            <th>Program</th>
                            <th>Total SMS Sent</th>
                            <th>Success</th>
                            <th>Failed</th>
                            <th>Delayed</th>
                            <th>Success Rate</th>
                        </tr>
                    </thead>
                    <tbody id="smsReportsTable">
                        <!-- Data will be populated by JavaScript -->
                    </tbody>
                </table>

                <h2 style="margin-top: 30px;">Monthly Trends</h2>
                <div style="background: var(--light); padding: 20px; border-radius: 10px; margin-top: 15px; text-align: center;">
                    <p>Attendance trend chart would be displayed here</p>
                    <div style="height: 200px; display: flex; align-items: center; justify-content: center; color: var(--gray);">
                        <i class="fas fa-chart-line" style="font-size: 3rem;"></i>
                    </div>
                </div>
            </div>

            <!-- Settings Page -->
            <div id="settingsPage" class="main-content hidden">
                <div class="page-title">
                    <h1>System Settings</h1>
                </div>

                <div class="stats-cards">
                    <div class="stat-card">
                        <h3>School Information</h3>
                        <div class="value">PLT Records</div>
                        <div class="trend"><i class="fas fa-school"></i> Active</div>
                    </div>
                    <div class="stat-card">
                        <h3>Academic Year</h3>
                        <div class="value">2023-2024</div>
                        <div class="trend"><i class="fas fa-calendar"></i> Current</div>
                    </div>
                    <div class="stat-card">
                        <h3>Users</h3>
                        <div class="value">48</div>
                        <div class="trend up"><i class="fas fa-users"></i> 5 new this month</div>
                    </div>
                    <div class="stat-card">
                        <h3>System Status</h3>
                        <div class="value">Online</div>
                        <div class="trend up"><i class="fas fa-check-circle"></i> All systems operational</div>
                    </div>
                </div>

                <div class="settings-form">
                    <div class="settings-section">
                        <h3>General Settings</h3>
                        <div class="form-group">
                            <label for="schoolName">School Name</label>
                            <input type="text" id="schoolName" value="PLT Records">
                        </div>
                        <div class="form-group">
                            <label for="academicYear">Academic Year</label>
                            <input type="text" id="academicYear" value="2023-2024">
                        </div>
                        <div class="form-group">
                            <label for="timeIn">Default Time In</label>
                            <input type="time" id="timeIn" value="08:00">
                        </div>
                        <div class="form-group">
                            <label for="timeOut">Default Time Out</label>
                            <input type="time" id="timeOut" value="15:00">
                        </div>
                    </div>

                    <div class="settings-section">
                        <h3>SMS Gateway Settings</h3>
                        <div class="form-group">
                            <label for="smsProvider">SMS Provider</label>
                            <select id="smsProvider">
                                <option value="twilio">Twilio</option>
                                <option value="nexmo">Nexmo</option>
                                <option value="plivo">Plivo</option>
                            </select>
                        </div>
                        <div class="form-group">
                            <label for="apiKey">API Key</label>
                            <input type="password" id="apiKey" value="••••••••••••••••">
                        </div>
                        <div class="form-group">
                            <label for="apiSecret">API Secret</label>
                            <input type="password" id="apiSecret" value="••••••••••••••••">
                        </div>
                        <div class="form-group">
                            <label for="senderId">Sender ID</label>
                            <input type="text" id="senderId" value="PLT-RECORDS">
                        </div>
                    </div>

                    <div class="settings-section">
                        <h3>Notification Settings</h3>
                        <div class="form-group">
                            <label>
                                <input type="checkbox" id="emailNotifications" checked>
                                Enable Email Notifications
                            </label>
                        </div>
                        <div class="form-group">
                            <label>
                                <input type="checkbox" id="smsNotifications" checked>
                                Enable SMS Notifications
                            </label>
                        </div>
                        <div class="form-group">
                            <label for="notificationEmail">Notification Email</label>
                            <input type="email" id="notificationEmail" value="admin@pltrecords.edu">
                        </div>
                    </div>

                    <div class="form-actions">
                        <button class="btn btn-secondary" id="cancelSettingsBtn">Cancel</button>
                        <button class="btn btn-primary" id="saveSettingsBtn">Save Changes</button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Add Attendance Modal -->
    <div id="addAttendanceModal" class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <h2>Add Attendance Record</h2>
                <button class="close-btn">&times;</button>
            </div>
            <div class="form-group">
                <label for="studentSelect">Student</label>
                <select id="studentSelect">
                    <option value="">Select Student</option>
                    <!-- Options will be populated by JavaScript -->
                </select>
            </div>
            <div class="form-group">
                <label for="attendanceDate">Date</label>
                <input type="date" id="attendanceDate" value="2023-10-16">
            </div>
            <div class="form-group">
                <label for="timeInInput">Time In</label>
                <input type="time" id="timeInInput" value="08:00">
            </div>
            <div class="form-group">
                <label for="timeOutInput">Time Out</label>
                <input type="time" id="timeOutInput" value="15:00">
            </div>
            <div class="form-group">
                <label for="statusSelect">SMS Status</label>
                <select id="statusSelect">
                    <option value="success">Success</option>
                    <option value="failed">Failed</option>
                    <option value="delayed">Delayed</option>
                </select>
            </div>
            <div class="form-actions">
                <button class="btn btn-secondary" id="cancelAttendanceBtn">Cancel</button>
                <button class="btn btn-primary" id="saveAttendanceBtn">Save Record</button>
            </div>
        </div>
    </div>

    <!-- Edit Attendance Modal -->
    <div id="editAttendanceModal" class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <h2>Edit Attendance Record</h2>
                <button class="close-btn">&times;</button>
            </div>
            <input type="hidden" id="editRecordId">
            <div class="form-group">
                <label for="editStudentSelect">Student</label>
                <select id="editStudentSelect">
                    <option value="">Select Student</option>
                    <!-- Options will be populated by JavaScript -->
                </select>
            </div>
            <div class="form-group">
                <label for="editAttendanceDate">Date</label>
                <input type="date" id="editAttendanceDate">
            </div>
            <div class="form-group">
                <label for="editTimeInInput">Time In</label>
                <input type="time" id="editTimeInInput">
            </div>
            <div class="form-group">
                <label for="editTimeOutInput">Time Out</label>
                <input type="time" id="editTimeOutInput">
            </div>
            <div class="form-group">
                <label for="editStatusSelect">SMS Status</label>
                <select id="editStatusSelect">
                    <option value="success">Success</option>
                    <option value="failed">Failed</option>
                    <option value="delayed">Delayed</option>
                </select>
            </div>
            <div class="form-actions">
                <button class="btn btn-secondary" id="cancelEditAttendanceBtn">Cancel</button>
                <button class="btn btn-primary" id="updateAttendanceBtn">Update Record</button>
            </div>
        </div>
    </div>

    <!-- Add Student Modal -->
    <div id="addStudentModal" class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <h2>Add New Student</h2>
                <button class="close-btn">&times;</button>
            </div>
            <div class="form-group">
                <label for="studentId">Student ID</label>
                <input type="text" id="studentId" placeholder="Enter student ID">
            </div>
            <div class="form-group">
                <label for="studentName">Full Name</label>
                <input type="text" id="studentName" placeholder="Enter full name">
            </div>
            <div class="form-group">
                <label for="studentProgram">Program</label>
                <select id="studentProgram">
                    <option value="Information Technology">Information Technology</option>
                    <option value="Entertainment and Multimedia">Entertainment and Multimedia</option>
                    <option value="Computer Science">Computer Science</option>
                </select>
            </div>
            <div class="form-group">
                <label for="studentSection">Section</label>
                <input type="text" id="studentSection" placeholder="Enter section">
            </div>
            <div class="form-group">
                <label for="studentContact">Contact Number</label>
                <input type="text" id="studentContact" placeholder="Enter contact number">
            </div>
            <div class="form-actions">
                <button class="btn btn-secondary" id="cancelStudentBtn">Cancel</button>
                <button class="btn btn-primary" id="saveStudentBtn">Save Student</button>
            </div>
        </div>
    </div>

    <!-- Edit Student Modal -->
    <div id="editStudentModal" class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <h2>Edit Student</h2>
                <button class="close-btn">&times;</button>
            </div>
            <input type="hidden" id="editStudentId">
            <div class="form-group">
                <label for="editStudentName">Full Name</label>
                <input type="text" id="editStudentName" placeholder="Enter full name">
            </div>
            <div class="form-group">
                <label for="editStudentProgram">Program</label>
                <select id="editStudentProgram">
                    <option value="Information Technology">Information Technology</option>
                    <option value="Entertainment and Multimedia">Entertainment and Multimedia</option>
                    <option value="Computer Science">Computer Science</option>
                </select>
            </div>
            <div class="form-group">
                <label for="editStudentSection">Section</label>
                <input type="text" id="editStudentSection" placeholder="Enter section">
            </div>
            <div class="form-group">
                <label for="editStudentContact">Contact Number</label>
                <input type="text" id="editStudentContact" placeholder="Enter contact number">
            </div>
            <div class="form-actions">
                <button class="btn btn-secondary" id="cancelEditStudentBtn">Cancel</button>
                <button class="btn btn-primary" id="updateStudentBtn">Update Student</button>
            </div>
        </div>
    </div>

    <script>
        // Sample data for demonstration
        const attendanceData = [
            { id: "STU-2023-0042", name: "Sarah Johnson", program: "Computer Science", date: "2023-10-16", timeIn: "08:15 AM", timeOut: "03:30 PM", status: "success" },
            { id: "STU-2023-0038", name: "Michael Chen", program: "Computer Science", date: "2023-10-16", timeIn: "08:05 AM", timeOut: "03:25 PM", status: "success" },
            { id: "STU-2023-0015", name: "Emily Rodriguez", program: "Information Technology", date: "2023-10-16", timeIn: "08:10 AM", timeOut: "03:20 PM", status: "success" },
            { id: "STU-2023-0021", name: "James Wilson", program: "Entertainment and Multimedia", date: "2023-10-16", timeIn: "08:12 AM", timeOut: "03:28 PM", status: "success" },
            { id: "STU-2023-0033", name: "Olivia Parker", program: "Information Technology", date: "2023-10-16", timeIn: "08:18 AM", timeOut: "03:32 PM", status: "success" },
            { id: "STU-2023-0009", name: "Daniel Kim", program: "Entertainment and Multimedia", date: "2023-10-16", timeIn: "08:22 AM", timeOut: "03:35 PM", status: "success" },
            { id: "STU-2023-0056", name: "Sophia Martinez", program: "Computer Science", date: "2023-10-16", timeIn: "08:08 AM", timeOut: "03:26 PM", status: "success" },
            { id: "STU-2023-0072", name: "Ethan Brown", program: "Computer Science", date: "2023-10-16", timeIn: "08:14 AM", timeOut: "03:29 PM", status: "success" },
            { id: "STU-2023-0042", name: "Sarah Johnson", program: "Information Technology", date: "2023-10-15", timeIn: "08:20 AM", timeOut: "03:35 PM", status: "success" },
            { id: "STU-2023-0042", name: "Sarah Johnson", program: "Information Technology", date: "2023-10-12", timeIn: "08:10 AM", timeOut: "03:25 PM", status: "success" },
        ];

        const studentsData = [
            { id: "STU-2023-0042", name: "Sarah Johnson", program: "Information Technology", section: "A", contact: "555-1234", attendanceRate: "98%" },
            { id: "STU-2023-0038", name: "Michael Chen", program: "Computer Science", section: "B", contact: "555-5678", attendanceRate: "95%" },
            { id: "STU-2023-0015", name: "Emily Rodriguez", program: "Entertainment and Multimedia", section: "C", contact: "555-9012", attendanceRate: "92%" },
            { id: "STU-2023-0021", name: "James Wilson", program: "Computer Science", section: "A", contact: "555-3456", attendanceRate: "96%" },
            { id: "STU-2023-0033", name: "Olivia Parker", program: "Information Technology", section: "B", contact: "555-7890", attendanceRate: "94%" },
            { id: "STU-2023-0009", name: "Daniel Kim", program: "Entertainment and Multimedia", section: "A", contact: "555-2345", attendanceRate: "97%" },
            { id: "STU-2023-0056", name: "Sophia Martinez", program: "Computer Science", section: "A", contact: "555-6789", attendanceRate: "99%" },
            { id: "STU-2023-0072", name: "Ethan Brown", program: "Information Technology", section: "C", contact: "555-0123", attendanceRate: "91%" },
        ];

        const reportsData = [
            { program: "Information Technology", total: 312, present: 295, absent: 10, late: 7, rate: "94.6%" },
            { program: "Entertainment and Multimedia", total: 298, present: 285, absent: 8, late: 5, rate: "95.6%" },
            { program: "Computer Science", total: 305, present: 290, absent: 9, late: 6, rate: "95.1%" },
        ];

        const smsReportsData = [
            { program: "Information Technology", total: 312, success: 305, failed: 5, delayed: 2, rate: "97.8%" },
            { program: "Entertainment and Multimedia", total: 298, success: 290, failed: 6, delayed: 2, rate: "97.3%" },
            { program: "Computer Science", total: 305, success: 298, failed: 4, delayed: 3, rate: "97.7%" },
        ];

        // DOM Elements
        const sidebarLinks = document.querySelectorAll('.sidebar-menu a');
        const pages = document.querySelectorAll('.main-content');
        const searchInput = document.getElementById('searchInput');
        const searchBtn = document.getElementById('searchBtn');
        const attendanceTableBody = document.getElementById('attendanceTableBody');
        const datePicker = document.getElementById('datePicker');
        const addAttendanceBtn = document.getElementById('addAttendanceBtn');
        const addStudentBtn = document.getElementById('addStudentBtn');
        const addAttendanceModal = document.getElementById('addAttendanceModal');
        const editAttendanceModal = document.getElementById('editAttendanceModal');
        const addStudentModal = document.getElementById('addStudentModal');
        const editStudentModal = document.getElementById('editStudentModal');
        const closeBtns = document.querySelectorAll('.close-btn');
        const cancelAttendanceBtn = document.getElementById('cancelAttendanceBtn');
        const cancelEditAttendanceBtn = document.getElementById('cancelEditAttendanceBtn');
        const cancelStudentBtn = document.getElementById('cancelStudentBtn');
        const cancelEditStudentBtn = document.getElementById('cancelEditStudentBtn');
        const saveAttendanceBtn = document.getElementById('saveAttendanceBtn');
        const updateAttendanceBtn = document.getElementById('updateAttendanceBtn');
        const saveStudentBtn = document.getElementById('saveStudentBtn');
        const updateStudentBtn = document.getElementById('updateStudentBtn');
        const saveSettingsBtn = document.getElementById('saveSettingsBtn');
        const cancelSettingsBtn = document.getElementById('cancelSettingsBtn');
        const studentSelect = document.getElementById('studentSelect');
        const editStudentSelect = document.getElementById('editStudentSelect');
        const attendanceManagementTable = document.getElementById('attendanceManagementTable');
        const studentsTable = document.getElementById('studentsTable');
        const reportsTable = document.getElementById('reportsTable');
        const smsReportsTable = document.getElementById('smsReportsTable');
        const programFilter = document.getElementById('programFilter');
        const statusFilter = document.getElementById('statusFilter');
        const attendanceDateFilter = document.getElementById('attendanceDateFilter');

        // Set today's date as default
        const today = new Date();
        const formattedDate = today.toISOString().split('T')[0];
        datePicker.value = formattedDate;

        // Navigation functionality
        sidebarLinks.forEach(link => {
            link.addEventListener('click', (e) => {
                e.preventDefault();
                
                // Update active link
                sidebarLinks.forEach(l => l.classList.remove('active'));
                link.classList.add('active');
                
                // Show corresponding page
                const pageId = link.getAttribute('data-page') + 'Page';
                pages.forEach(page => {
                    if (page.id === pageId) {
                        page.classList.remove('hidden');
                    } else {
                        page.classList.add('hidden');
                    }
                });
                
                // Load data for the page
                if (pageId === 'attendancePage') {
                    populateAttendanceManagementTable(attendanceData);
                } else if (pageId === 'studentsPage') {
                    populateStudentsTable(studentsData);
                } else if (pageId === 'reportsPage') {
                    populateReportsTable(reportsData);
                    populateSMSReportsTable(smsReportsData);
                }
            });
        });

        // Populate attendance table
        function populateTable(data) {
            attendanceTableBody.innerHTML = '';
            
            if (data.length === 0) {
                const row = document.createElement('tr');
                row.innerHTML = `<td colspan="7" style="text-align: center; padding: 30px;">No records found for the selected date.</td>`;
                attendanceTableBody.appendChild(row);
                return;
            }
            
            data.forEach(record => {
                const row = document.createElement('tr');
                
                let statusClass = record.status === 'success' ? 'success' : 
                                record.status === 'failed' ? 'failed' : 'delayed';
                let statusText = record.status === 'success' ? 'Success' : 
                               record.status === 'failed' ? 'Failed' : 'Delayed';
                
                row.innerHTML = `
                    <td>${record.id}</td>
                    <td>${record.name}</td>
                    <td>${record.program}</td>
                    <td>${formatDate(record.date)}</td>
                    <td>${record.timeIn || '-'}</td>
                    <td>${record.timeOut || '-'}</td>
                    <td><span class="status ${statusClass}">${statusText}</span></td>
                `;
                
                attendanceTableBody.appendChild(row);
            });
        }

        // Populate attendance management table
        function populateAttendanceManagementTable(data) {
            attendanceManagementTable.innerHTML = '';
            
            if (data.length === 0) {
                const row = document.createElement('tr');
                row.innerHTML = `<td colspan="8" style="text-align: center; padding: 30px;">No records found.</td>`;
                attendanceManagementTable.appendChild(row);
                return;
            }
            
            data.forEach(record => {
                const row = document.createElement('tr');
                
                let statusClass = record.status === 'success' ? 'success' : 
                                record.status === 'failed' ? 'failed' : 'delayed';
                let statusText = record.status === 'success' ? 'Success' : 
                               record.status === 'failed' ? 'Failed' : 'Delayed';
                
                row.innerHTML = `
                    <td>${record.id}</td>
                    <td>${record.name}</td>
                    <td>${record.program}</td>
                    <td>${formatDate(record.date)}</td>
                    <td>${record.timeIn || '-'}</td>
                    <td>${record.timeOut || '-'}</td>
                    <td><span class="status ${statusClass}">${statusText}</span></td>
                    <td>
                        <button class="btn btn-secondary btn-sm edit-attendance" data-id="${record.id}"><i class="fas fa-edit"></i></button>
                        <button class="btn btn-danger btn-sm delete-attendance" data-id="${record.id}"><i class="fas fa-trash"></i></button>
                    </td>
                `;
                
                attendanceManagementTable.appendChild(row);
            });

            // Add event listeners to edit and delete buttons
            document.querySelectorAll('.edit-attendance').forEach(button => {
                button.addEventListener('click', function() {
                    const recordId = this.getAttribute('data-id');
                    editAttendanceRecord(recordId);
                });
            });

            document.querySelectorAll('.delete-attendance').forEach(button => {
                button.addEventListener('click', function() {
                    const recordId = this.getAttribute('data-id');
                    deleteAttendanceRecord(recordId);
                });
            });
        }

        // Populate students table
        function populateStudentsTable(data) {
            studentsTable.innerHTML = '';
            
            if (data.length === 0) {
                const row = document.createElement('tr');
                row.innerHTML = `<td colspan="7" style="text-align: center; padding: 30px;">No students found.</td>`;
                studentsTable.appendChild(row);
                return;
            }
            
            data.forEach(student => {
                const row = document.createElement('tr');
                
                row.innerHTML = `
                    <td>${student.id}</td>
                    <td>${student.name}</td>
                    <td>${student.program}</td>
                    <td>${student.section}</td>
                    <td>${student.contact}</td>
                    <td>${student.attendanceRate}</td>
                    <td>
                        <button class="btn btn-secondary btn-sm edit-student" data-id="${student.id}"><i class="fas fa-edit"></i></button>
                        <button class="btn btn-danger btn-sm delete-student" data-id="${student.id}"><i class="fas fa-trash"></i></button>
                    </td>
                `;
                
                studentsTable.appendChild(row);
            });

            // Add event listeners to edit and delete buttons
            document.querySelectorAll('.edit-student').forEach(button => {
                button.addEventListener('click', function() {
                    const studentId = this.getAttribute('data-id');
                    editStudentRecord(studentId);
                });
            });

            document.querySelectorAll('.delete-student').forEach(button => {
                button.addEventListener('click', function() {
                    const studentId = this.getAttribute('data-id');
                    deleteStudentRecord(studentId);
                });
            });
        }

        // Populate reports table
        function populateReportsTable(data) {
            reportsTable.innerHTML = '';
            
            data.forEach(report => {
                const row = document.createElement('tr');
                
                row.innerHTML = `
                    <td>${report.program}</td>
                    <td>${report.total}</td>
                    <td>${report.present}</td>
                    <td>${report.absent}</td>
                    <td>${report.late}</td>
                    <td>${report.rate}</td>
                `;
                
                reportsTable.appendChild(row);
            });
        }

        // Populate SMS reports table
        function populateSMSReportsTable(data) {
            smsReportsTable.innerHTML = '';
            
            data.forEach(report => {
                const row = document.createElement('tr');
                
                row.innerHTML = `
                    <td>${report.program}</td>
                    <td>${report.total}</td>
                    <td>${report.success}</td>
                    <td>${report.failed}</td>
                    <td>${report.delayed}</td>
                    <td>${report.rate}</td>
                `;
                
                smsReportsTable.appendChild(row);
            });
        }

        // Format date for display
        function formatDate(dateString) {
            const options = { year: 'numeric', month: 'short', day: 'numeric' };
            return new Date(dateString).toLocaleDateString('en-US', options);
        }

        // Search functionality
        searchBtn.addEventListener('click', () => {
            const searchTerm = searchInput.value.trim();
            const selectedDate = datePicker.value;
            
            let filteredData = attendanceData.filter(record => record.date === selectedDate);
            
            if (searchTerm !== '') {
                filteredData = filteredData.filter(record => 
                    record.id.toLowerCase().includes(searchTerm.toLowerCase()) || 
                    record.name.toLowerCase().includes(searchTerm.toLowerCase())
                );
            }
            
            populateTable(filteredData);
        });

        // Date change functionality
        datePicker.addEventListener('change', () => {
            const selectedDate = datePicker.value;
            const searchTerm = searchInput.value.trim();
            
            let filteredData = attendanceData.filter(record => record.date === selectedDate);
            
            if (searchTerm !== '') {
                filteredData = filteredData.filter(record => 
                    record.id.toLowerCase().includes(searchTerm.toLowerCase()) || 
                    record.name.toLowerCase().includes(searchTerm.toLowerCase())
                );
            }
            
            populateTable(filteredData);
        });

        // Filter functionality for attendance management
        programFilter.addEventListener('change', applyAttendanceFilters);
        statusFilter.addEventListener('change', applyAttendanceFilters);
        attendanceDateFilter.addEventListener('change', applyAttendanceFilters);

        function applyAttendanceFilters() {
            const selectedDate = attendanceDateFilter.value;
            const selectedProgram = programFilter.value;
            const selectedStatus = statusFilter.value;
            
            let filteredData = attendanceData;
            
            if (selectedDate) {
                filteredData = filteredData.filter(record => record.date === selectedDate);
            }
            
            if (selectedProgram) {
                filteredData = filteredData.filter(record => record.program === selectedProgram);
            }
            
            if (selectedStatus) {
                filteredData = filteredData.filter(record => record.status === selectedStatus);
            }
            
            populateAttendanceManagementTable(filteredData);
        }

        // Modal functionality
        addAttendanceBtn.addEventListener('click', () => {
            addAttendanceModal.style.display = 'flex';
            populateStudentSelect();
        });

        addStudentBtn.addEventListener('click', () => {
            addStudentModal.style.display = 'flex';
        });

        closeBtns.forEach(btn => {
            btn.addEventListener('click', () => {
                addAttendanceModal.style.display = 'none';
                editAttendanceModal.style.display = 'none';
                addStudentModal.style.display = 'none';
                editStudentModal.style.display = 'none';
            });
        });

        cancelAttendanceBtn.addEventListener('click', () => {
            addAttendanceModal.style.display = 'none';
        });

        cancelEditAttendanceBtn.addEventListener('click', () => {
            editAttendanceModal.style.display = 'none';
        });

        cancelStudentBtn.addEventListener('click', () => {
            addStudentModal.style.display = 'none';
        });

        cancelEditStudentBtn.addEventListener('click', () => {
            editStudentModal.style.display = 'none';
        });

        cancelSettingsBtn.addEventListener('click', () => {
            alert('Settings changes cancelled');
        });

        saveAttendanceBtn.addEventListener('click', () => {
            const studentId = studentSelect.value;
            const date = document.getElementById('attendanceDate').value;
            const timeIn = document.getElementById('timeInInput').value;
            const timeOut = document.getElementById('timeOutInput').value;
            const status = document.getElementById('statusSelect').value;
            
            if (!studentId || !date) {
                alert('Please fill in all required fields');
                return;
            }
            
            // Find student details
            const student = studentsData.find(s => s.id === studentId);
            
            // Add new record
            const newRecord = {
                id: studentId,
                name: student.name,
                program: student.program,
                date: date,
                timeIn: formatTime(timeIn),
                timeOut: formatTime(timeOut),
                status: status
            };
            
            attendanceData.push(newRecord);
            
            // Update the table
            populateAttendanceManagementTable(attendanceData);
            
            alert('Attendance record saved successfully!');
            addAttendanceModal.style.display = 'none';
        });

        updateAttendanceBtn.addEventListener('click', () => {
            const recordId = document.getElementById('editRecordId').value;
            const studentId = editStudentSelect.value;
            const date = document.getElementById('editAttendanceDate').value;
            const timeIn = document.getElementById('editTimeInInput').value;
            const timeOut = document.getElementById('editTimeOutInput').value;
            const status = document.getElementById('editStatusSelect').value;
            
            if (!studentId || !date) {
                alert('Please fill in all required fields');
                return;
            }
            
            // Find and update the record
            const recordIndex = attendanceData.findIndex(r => r.id === recordId);
            if (recordIndex !== -1) {
                // Find student details
                const student = studentsData.find(s => s.id === studentId);
                
                attendanceData[recordIndex] = {
                    id: studentId,
                    name: student.name,
                    program: student.program,
                    date: date,
                    timeIn: formatTime(timeIn),
                    timeOut: formatTime(timeOut),
                    status: status
                };
                
                // Update the table
                populateAttendanceManagementTable(attendanceData);
                
                alert('Attendance record updated successfully!');
                editAttendanceModal.style.display = 'none';
            }
        });

        saveStudentBtn.addEventListener('click', () => {
            const studentId = document.getElementById('studentId').value;
            const studentName = document.getElementById('studentName').value;
            const studentProgram = document.getElementById('studentProgram').value;
            const studentSection = document.getElementById('studentSection').value;
            const studentContact = document.getElementById('studentContact').value;
            
            if (!studentId || !studentName || !studentProgram || !studentSection || !studentContact) {
                alert('Please fill in all required fields');
                return;
            }
            
            // Add new student
            const newStudent = {
                id: studentId,
                name: studentName,
                program: studentProgram,
                section: studentSection,
                contact: studentContact,
                attendanceRate: "0%"
            };
            
            studentsData.push(newStudent);
            
            // Update the table
            populateStudentsTable(studentsData);
            
            alert('Student added successfully!');
            addStudentModal.style.display = 'none';
        });

        updateStudentBtn.addEventListener('click', () => {
            const studentId = document.getElementById('editStudentId').value;
            const studentName = document.getElementById('editStudentName').value;
            const studentProgram = document.getElementById('editStudentProgram').value;
            const studentSection = document.getElementById('editStudentSection').value;
            const studentContact = document.getElementById('editStudentContact').value;
            
            if (!studentName || !studentProgram || !studentSection || !studentContact) {
                alert('Please fill in all required fields');
                return;
            }
            
            // Find and update the student
            const studentIndex = studentsData.findIndex(s => s.id === studentId);
            if (studentIndex !== -1) {
                studentsData[studentIndex] = {
                    ...studentsData[studentIndex],
                    name: studentName,
                    program: studentProgram,
                    section: studentSection,
                    contact: studentContact
                };
                
                // Update the table
                populateStudentsTable(studentsData);
                
                alert('Student updated successfully!');
                editStudentModal.style.display = 'none';
            }
        });

        saveSettingsBtn.addEventListener('click', () => {
            alert('Settings saved successfully!');
        });

        // Populate student select in attendance modal
        function populateStudentSelect() {
            studentSelect.innerHTML = '<option value="">Select Student</option>';
            editStudentSelect.innerHTML = '<option value="">Select Student</option>';
            studentsData.forEach(student => {
                const option = document.createElement('option');
                option.value = student.id;
                option.textContent = `${student.name} (${student.id})`;
                studentSelect.appendChild(option);
                
                const editOption = document.createElement('option');
                editOption.value = student.id;
                editOption.textContent = `${student.name} (${student.id})`;
                editStudentSelect.appendChild(editOption);
            });
        }

        // Edit attendance record
        function editAttendanceRecord(recordId) {
            const record = attendanceData.find(r => r.id === recordId);
            if (record) {
                document.getElementById('editRecordId').value = record.id;
                document.getElementById('editStudentSelect').value = record.id;
                document.getElementById('editAttendanceDate').value = record.date;
                document.getElementById('editTimeInInput').value = parseTime(record.timeIn);
                document.getElementById('editTimeOutInput').value = parseTime(record.timeOut);
                document.getElementById('editStatusSelect').value = record.status;
                
                editAttendanceModal.style.display = 'flex';
            }
        }

        // Delete attendance record
        function deleteAttendanceRecord(recordId) {
            if (confirm('Are you sure you want to delete this attendance record?')) {
                const recordIndex = attendanceData.findIndex(r => r.id === recordId);
                if (recordIndex !== -1) {
                    attendanceData.splice(recordIndex, 1);
                    populateAttendanceManagementTable(attendanceData);
                    alert('Attendance record deleted successfully!');
                }
            }
        }

        // Edit student record
        function editStudentRecord(studentId) {
            const student = studentsData.find(s => s.id === studentId);
            if (student) {
                document.getElementById('editStudentId').value = student.id;
                document.getElementById('editStudentName').value = student.name;
                document.getElementById('editStudentProgram').value = student.program;
                document.getElementById('editStudentSection').value = student.section;
                document.getElementById('editStudentContact').value = student.contact;
                
                editStudentModal.style.display = 'flex';
            }
        }

        // Delete student record
        function deleteStudentRecord(studentId) {
            if (confirm('Are you sure you want to delete this student?')) {
                const studentIndex = studentsData.findIndex(s => s.id === studentId);
                if (studentIndex !== -1) {
                    studentsData.splice(studentIndex, 1);
                    populateStudentsTable(studentsData);
                    alert('Student deleted successfully!');
                }
            }
        }

        // Format time for display (convert from 24h to 12h)
        function formatTime(time24) {
            if (!time24) return '-';
            
            const [hours, minutes] = time24.split(':');
            const hour = parseInt(hours);
            const ampm = hour >= 12 ? 'PM' : 'AM';
            const hour12 = hour % 12 || 12;
            
            return `${hour12}:${minutes} ${ampm}`;
        }

        // Parse time from display format to 24h format
        function parseTime(time12) {
            if (!time12 || time12 === '-') return '';
            
            const [timePart, ampm] = time12.split(' ');
            const [hours, minutes] = timePart.split(':');
            
            let hour = parseInt(hours);
            if (ampm === 'PM' && hour < 12) hour += 12;
            if (ampm === 'AM' && hour === 12) hour = 0;
            
            return `${hour.toString().padStart(2, '0')}:${minutes}`;
        }

        // Initialize the table with today's data
        const todayData = attendanceData.filter(record => record.date === formattedDate);
        populateTable(todayData);
    </script>
</body>
</html>
